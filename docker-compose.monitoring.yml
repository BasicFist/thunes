# Docker Compose for THUNES Monitoring Stack
# Sprint 2.3 - Phase 13 Observability
#
# Usage:
#   docker-compose -f docker-compose.monitoring.yml up -d
#   docker-compose -f docker-compose.monitoring.yml down
#
# Access:
#   Prometheus: http://localhost:9090
#   Grafana: http://localhost:3000 (admin/thunes123)

version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: thunes-prometheus
    user: "1000:1000"  # Run as current user to avoid permission issues
    volumes:
      - ./monitoring/prometheus:/etc/prometheus:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - thunes-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  grafana:
    image: grafana/grafana:10.2.2
    container_name: thunes-grafana
    user: "1000:1000"  # Run as current user
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=thunes123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - thunes-monitoring
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Alertmanager for routing alerts to Telegram
  # Uncomment to enable Telegram notifications
  # alertmanager:
  #   image: prom/alertmanager:v0.26.0
  #   container_name: thunes-alertmanager
  #   volumes:
  #     - ./monitoring/alertmanager:/etc/alertmanager:ro
  #     - alertmanager-data:/alertmanager
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/alertmanager'
  #   ports:
  #     - "9093:9093"
  #   networks:
  #     - thunes-monitoring
  #   restart: unless-stopped

networks:
  thunes-monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  # alertmanager-data:
  #   driver: local
